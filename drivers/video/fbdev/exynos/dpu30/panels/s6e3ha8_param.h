/* linux/drivers/video/decon_display/s6e3fa8_param.h
 *
 * Copyright (c) 2014 Samsung Electronics Co., Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __S6E3HA8_PARAM_H__
#define __S6E3HA8_PARAM_H__

#define S6E3HA8_ID_REG			0x04
#define S6E3HA8_RD_LEN			3
#define S6E3HA8_RDDPM_ADDR		0x0A
#define S6E3HA8_RDDSM_ADDR		0x0E

/* MCD */
static const unsigned char SEQ_TEST_KEY_ON_F0[] = {
	0xf0, 0x5a, 0x5a
};

static const unsigned char SEQ_TEST_KEY_ON_FC[] = {
	0xfc, 0x5a, 0x5a
};

static const unsigned char SEQ_DSC_EN[] = {
	0x01
};

static const unsigned char SEQ_PPS_SLICE2[] = {
	// QHD :2960x1440
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0B, 0x90,
	0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
	0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
	0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
	0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
	0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
	0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
	0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
	0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
	0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const unsigned char SEQ_SLEEP_OUT[] = {
	0x11
};

static const unsigned char SEQ_TSP_HSYNC[] = {
	0xB9,
	0x00, 0xB0, 0x8F, 0x09, 0x00, 0x00, 0x00, 0x11, 0x01

};

static const unsigned char SEQ_TSP_VSYNC[] = {
	0xB0, 0x07
};

static const unsigned char SEQ_SET_AREA[] = {
	0x1A, 0x1F, 0x00, 0x00, 0x00, 0x00,
};

static const unsigned char SEQ_TE_ON[] = {
	0x35
};

static const unsigned char SEQ_ERR_FG[] = {
	0xED, 0x44
};

static const unsigned char SEQ_TE_START_SETTING[] = {
#if !defined(CONFIG_SOC_EXYNOS9820_EVT0) && defined(CONFIG_EXYNOS_PLL_SLEEP)
	/* TE start timing is advanced due to latency for the PLL_SLEEP
	 *  [default value] 2959(active line) + 15(vbp) - 2 = 2972 = 0xB9C
	 *  [modified value] default value - 11(modifying line) = 2961 = 0xB91
	 */
	0xB9, 0x01, 0xB0, 0x91, 0x09
#else
	0xB9, 0x00, 0xB0, 0x9C, 0x09
#endif
};

static const unsigned char SEQ_FFC[] = {
	0xCE,
	0x0D, 0x58, 0x14, 0x64, 0x38, 0xB8,	0xF2, 0x03,
	0x00, 0xFF, 0x02, 0x0A,	0x0A, 0x0A, 0x0A, 0x0F,
	0x23,
};

static const unsigned char SEQ_TEST_KEY_OFF_FC[] = {
	0xFC, 0xA5, 0xA5
};

static const unsigned char SEQ_TEST_KEY_OFF_F0[] = {
	0xF0, 0xA5, 0xA5
};

static const unsigned char SEQ_TEST_KEY_OFF_F1[] = {
	0xF1, 0xA5, 0xA5
};

static const unsigned char SEQ_DISPLAY_ON[] = {
	0x29
};

static const unsigned char SEQ_DISPLAY_OFF[] = {
	0x28
};

static const unsigned char SEQ_TSET_GLOBAL[] = {
	0xB0,
	0x01
};

static const unsigned char SEQ_ESD_FG[] = {
	0xED,
	0x01, 0x04
};

static const unsigned char SEQ_ALLPOFF[] = {
	0x22
};

static const unsigned char SEQ_ALLPON[] = {
	0x23
};

static const unsigned char SEQ_NOP[] = {
	0x00,
};

static const unsigned char KEY1_ENABLE[] = {
	0x9F, 0xA5, 0xA5
};

static const unsigned char KEY2_ENABLE[] = {
	0xF0, 0x5A, 0x5A
};

static const unsigned char KEY1_DISABLE[] = {
	0x9F, 0x5A, 0x5A
};

static const unsigned char KEY2_DISABLE[] = {
	0xF0, 0xA5, 0xA5
};

static const unsigned char SEQ_B_CTRL_ON[] = {
	0x53,0x20
};

static const unsigned char SEQ_B_CTRL_OFF[] = {
	0x53,0x00
};

static const unsigned char DSC_EN[][1] = {
	{ 0x00 },
	{ 0x01 },
};

static const unsigned char PPS_TABLE[][128] = {
	{
		/* PPS MODE0 : 1440x2960, Slice Info : 720x40 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0B, 0x90,
		0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
		0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
		0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	},
	{
		/* PPS MODE1 : 1080x2220, Slice Info : 540x30 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x08, 0xAC,
		0x04, 0x38, 0x00, 0x1E, 0x02, 0x1C, 0x02, 0x1C,
		0x02, 0x00, 0x02, 0x0E, 0x00, 0x20, 0x02, 0xE3,
		0x00, 0x07, 0x00, 0x0C, 0x03, 0x50, 0x03, 0x64,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	},
	{
		/* PPS MODE2 : 720x1048, Slice Info : 360x74 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x05, 0xC8,
		0x02, 0xD0, 0x00, 0x4A, 0x01, 0x68, 0x01, 0x68,
		0x02, 0x00, 0x01, 0xB4, 0x00, 0x20, 0x05, 0xBA,
		0x00, 0x05, 0x00, 0x0C, 0x01, 0x51, 0x02, 0x10,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	},
};

static const unsigned char SCALER_TABLE[][6] = {
	/* scaler off, 1440x2960 */
	{0xBA, 0x01, 0x26, 0x08, 0x08, 0xF3},
	/* 1.78x scaler on, 1080x2220 */
	{0xBA, 0x02, 0x26, 0x08, 0x08, 0xF3},
	/* 4x scaler on, 720x1048 */
	{0xBA, 0x00, 0x26, 0x08, 0x08, 0xF3},
};

static const unsigned char CASET_TABLE[][5] = {
	/* scaler off, 1440x2960 */
	{0x2A, 0x00, 0x00, 0x05, 0x9F},
	/* 1.78x scaler on, 1080x2220 */
	{0x2A, 0x00, 0x00, 0x04, 0x37},
	/* 4x scaler on, 720x1048 */
	{0x2A, 0x00, 0x00, 0x02, 0xCF},
};

static const unsigned char PASET_TABLE[][5] = {
	/* scaler off, 1440x2960 */
	{0x2B, 0x00, 0x00, 0x0B, 0x8F},
	/* 1.78x scaler on, 1080x2220 */
	{0x2B, 0x00, 0x00, 0x08, 0xAB},
	/* 4x scaler on, 720x1048 */
	{0x2B, 0x00, 0x00, 0x05, 0xC7},
};

/* MCD */
static const unsigned char SEQ_TEST_KEY_ON_F0_HA9[] = {
	0xf0, 0x5a, 0x5a
};

static const unsigned char SEQ_TEST_KEY_ON_FC_HA9[] = {
	0xfc, 0x5a, 0x5a
};

static const unsigned char SEQ_DSC_EN_HA9[] = {
	0x01
};

static const unsigned char SEQ_PPS_SLICE2_HA9[] = {
	// WQHD+ :1440x3040
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0B, 0xE0,
	0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
	0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
	0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
	0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
	0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
	0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
	0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
	0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
	0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};

static const unsigned char SEQ_SLEEP_OUT_HA9[] = {
	0x11
};

static const unsigned char SEQ_TSP_HSYNC_HA9[] = {
	0xB9,
	0x00/*0x01*/, 0xB0, 0xE5/*0x91*/, 0x09, 0x00, 0x00, 0x00, 0x11, 0x03,
};

static const unsigned char SEQ_TSP_VSYNC_HA9[] = {
	0xB0, 0x07
};

static const unsigned char SEQ_TE_ON_HA9[] = {
	0x35
};

static const unsigned char SEQ_ERR_FG_HA9[] = {
	0xED, 0x04, 0x44,
};

static const unsigned char SEQ_TE_START_SETTING_HA9[] = {
#if defined(CONFIG_EXYNOS_PLL_SLEEP)
	/* TE start timing is advanced due to latency for the PLL_SLEEP
	 *  [default value] 3039(active line) + 15(vbp) - 2 = 3052 = 0xBEC
	 *  [modified value] default value - 11(modifying line) = 3041 = 0xBE1
	 */
	0xB9, 0x01, 0xB0, 0xE1, 0x09
#else
	0xB9, 0x00, 0xB0, 0xEC, 0x09
#endif
};

static const unsigned char SEQ_FFC_HA9[] = {
	0xC5,
	0x0D, 0x10, 0xB4, 0x3E, 0x01,
};

static const unsigned char SEQ_TEST_KEY_OFF_FC_HA9[] = {
	0xFC, 0xA5, 0xA5
};

static const unsigned char SEQ_TEST_KEY_OFF_F0_HA9[] = {
	0xF0, 0xA5, 0xA5
};

static const unsigned char SEQ_TEST_KEY_OFF_F1_HA9[] = {
	0xF1, 0xA5, 0xA5
};

static const unsigned char SEQ_DISPLAY_ON_HA9[] = {
	0x29
};

static const unsigned char SEQ_DISPLAY_OFF_HA9[] = {
	0x28
};

static const unsigned char SEQ_TSET_GLOBAL_HA9[] = {
	0xB0,
	0x01
};

static const unsigned char SEQ_ESD_FG_HA9[] = {
	0xED,
	0x01, 0x04
};

static const unsigned char SEQ_ALLPOFF_HA9[] = {
	0x22
};

static const unsigned char SEQ_ALLPON_HA9[] = {
	0x23
};

static const unsigned char SEQ_NOP_HA9[] = {
	0x00,
};

static const unsigned char KEY1_ENABLE_HA9[] = {
	0x9F, 0xA5, 0xA5
};

static const unsigned char KEY2_ENABLE_HA9[] = {
	0xF0, 0x5A, 0x5A
};

static const unsigned char KEY1_DISABLE_HA9[] = {
	0x9F, 0x5A, 0x5A
};

static const unsigned char KEY2_DISABLE_HA9[] = {
	0xF0, 0xA5, 0xA5
};

static const unsigned char DSC_EN_HA9[][1] = {
	{ 0x00 },
	{ 0x01 },
};

static const unsigned char PPS_TABLE_HA9[][128] = {
	{
		/* PPS MODE0 : 1440x3040, Slice Info : 720x40 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x0B, 0xE0,
		0x05, 0xA0, 0x00, 0x28, 0x02, 0xD0, 0x02, 0xD0,
		0x02, 0x00, 0x02, 0x68, 0x00, 0x20, 0x04, 0x6C,
		0x00, 0x0A, 0x00, 0x0C, 0x02, 0x77, 0x01, 0xE9,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	},
	{
		/* PPS MODE1 : 1080x2280, Slice Info : 540x30 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x08, 0xE8,
		0x04, 0x38, 0x00, 0x1E, 0x02, 0x1C, 0x02, 0x1C,
		0x02, 0x00, 0x02, 0x0E, 0x00, 0x20, 0x02, 0xE3,
		0x00, 0x07, 0x00, 0x0C, 0x03, 0x50, 0x03, 0x64,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	},
	{
		/* PPS MODE2 : 720x1520, Slice Info : 360x74 */
		0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x05, 0xF0,
		0x02, 0xD0, 0x00, 0x4A, 0x01, 0x68, 0x01, 0x68,
		0x02, 0x00, 0x01, 0xB4, 0x00, 0x20, 0x05, 0xBA,
		0x00, 0x05, 0x00, 0x0C, 0x01, 0x51, 0x02, 0x10,
		0x18, 0x00, 0x10, 0xF0, 0x03, 0x0C, 0x20, 0x00,
		0x06, 0x0B, 0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38,
		0x46, 0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
		0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09, 0x40,
		0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA, 0x19, 0xF8,
		0x1A, 0x38, 0x1A, 0x78, 0x1A, 0xB6, 0x2A, 0xF6,
		0x2B, 0x34, 0x2B, 0x74, 0x3B, 0x74, 0x6B, 0xF4,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	},
};

static const unsigned char SCALER_TABLE_HA9[][6] = {
	/* scaler off, 1440x2960 */
	{0xBA, 0x01, 0x26, 0x08, 0x08, 0xF3},
	/* 1.78x scaler on, 1080x2220 */
	{0xBA, 0x02, 0x26, 0x08, 0x08, 0xF3},
	/* 4x scaler on, 720x1048 */
	{0xBA, 0x00, 0x26, 0x08, 0x08, 0xF3},
};

static const unsigned char CASET_TABLE_HA9[][5] = {
	/* scaler off, 1440x2960 */
	{0x2A, 0x00, 0x00, 0x05, 0x9F},
	/* 1.78x scaler on, 1080x2220 */
	{0x2A, 0x00, 0x00, 0x04, 0x37},
	/* 4x scaler on, 720x1048 */
	{0x2A, 0x00, 0x00, 0x02, 0xCF},
};

static const unsigned char PASET_TABLE_HA9[][5] = {
	/* scaler off, 1440x2960 */
	{0x2B, 0x00, 0x00, 0x0B, 0x8F},
	/* 1.78x scaler on, 1080x2220 */
	{0x2B, 0x00, 0x00, 0x08, 0xAB},
	/* 4x scaler on, 720x1048 */
	{0x2B, 0x00, 0x00, 0x05, 0xC7},
};

static const unsigned char GAMCTL1[] = {
	0xC7,
	0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char GAMCTL2[] = {
	0xC8,
	0x07, 0x4E, 0x02, 0x6C, 0xD9, 0xD8, 0xDB, 0xD2, 0xD0, 0xD5,
	0xBA, 0xB6, 0xC2, 0xBC, 0xB1, 0xBF, 0xCD, 0xC3, 0xD0, 0xC6,
	0xB9, 0xC8, 0x9E, 0x90, 0x9B, 0xBF, 0xCB, 0xC0, 0xAA, 0xAA,
	0xAA, 0x00, 0x02, 0x32, 0x05, 0x05, 0xC7, 0x24, 0xDD, 0xDB,
	0xDF, 0xD9, 0xD6, 0xDD, 0xBB, 0xB2, 0xC0, 0xBB, 0xAF, 0xBF,
	0xCB, 0xC1, 0xCD, 0xC7, 0xBA, 0xC6, 0x89, 0x7A, 0x88, 0xE0,
	0xF3, 0xE3, 0xAA, 0xAA, 0xAA, 0x00, 0x02, 0x32, 0x00, 0xD2,
	0x9C, 0xF1, 0xE0, 0xDD, 0xE3, 0xDC, 0xD9, 0xDF, 0xBA, 0xAE,
	0xBE, 0xBB, 0xAE, 0xBF, 0xCA, 0xC0, 0xCA, 0xC4, 0xB9, 0xC1,
	0x8D, 0x8D, 0x91, 0xE9, 0xF8, 0xEB, 0xAA, 0xAA, 0xAA, 0x00,
	0x02, 0x32
};

static const unsigned char GAMCTL3[] = {
	0xC9,
	0x00, 0xCE, 0x98, 0xED, 0xE2, 0xE0, 0xE5, 0xDB, 0xD7, 0xDF,
	0xBB, 0xAF, 0xBE, 0xBB, 0xB0, 0xBE, 0xCA, 0xC3, 0xCC, 0xC9,
	0xC1, 0xC4, 0x98, 0x9A, 0x96, 0xF3, 0xF4, 0xEF, 0xAA, 0xAA,
	0xAA, 0x00, 0x02, 0x32, 0x00, 0xC0, 0x8C, 0xDF, 0xE3, 0xE2,
	0xE7, 0xDA, 0xD6, 0xDD, 0xBE, 0xB2, 0xC0, 0xBE, 0xB9, 0xC0,
	0xD0, 0xD1, 0xCF, 0xD3, 0xD7, 0xCE, 0xCB, 0xD8, 0xAD, 0xEF,
	0xFB, 0xE9, 0xAA, 0xAA, 0xAA, 0x00, 0x02, 0x32, 0x00, 0xC9,
	0x94, 0xE8, 0xE4, 0xE2, 0xE6, 0xDB, 0xD9, 0xDF, 0xBF, 0xB9,
	0xC1, 0xC6, 0xC5, 0xC6, 0xD7, 0xDE, 0xD6, 0xE1, 0xE3, 0xD7,
	0xDE, 0xE5, 0xCB, 0xFF, 0xFF, 0xF7, 0xAA, 0xAA, 0xAA, 0x00,
	0x02, 0x32, 0x00, 0xC5, 0x92, 0xE4, 0xE5, 0xE3, 0xE7, 0xDD,
	0xDD, 0xE0, 0xC4, 0xC1, 0xC4, 0xCD, 0xD1, 0xCB, 0xE0, 0xE7,
	0xDC, 0xE9, 0xEF, 0xDF, 0xEC, 0xEE, 0xDA, 0xFF, 0xFE, 0xFD,
	0xAA, 0xAA, 0xAA, 0x00, 0x02, 0x32
};

static const unsigned char BCCTL[] = {
	0xB1,
	0x00, 0x0C, 0x0C, 0xA0, 0x30, 0x20, 0x40, 0x17, 0x0C, 0x0C,
	0x18, 0x3B, 0x91, 0x0B, 0xFE, 0xFF, 0x00, 0x16, 0xBC, 0x04,
	0x38, 0x6B, 0x9F, 0xD2, 0x0C, 0x9E, 0x36, 0xCE, 0x66, 0xFE,
	0xB9, 0x64, 0x20, 0x00, 0x00, 0x73, 0x36, 0xF9, 0xBC, 0x7F,
	0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x11	//0x41
};

static const unsigned char PANEL_UPDATE[] = {
	0xF7, 0x03
};

#endif /* __S6E3HA8_PARAM_H__ */
