/*
 * SAMSUNG EXYNOS9630 board common device tree source
 *
 * Copyright (c) 2019 Samsung Electronics Co., Ltd.
 *              http://www.samsung.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */



/dts-v1/;
/plugin/;

#include <dt-bindings/interrupt-controller/s5e3830.h>
#include "erd3830-pmic.dtsi"
#include "battery_data_erd3830_common_s2mu106.dtsi"
//#include "s5e3830-erd3830-cp-s318ap-sit.dtsi"
#include "s5e3830-univ3830-cp-s318ap-sipc.dtsi"

/ {
        fragment@model {
                target-path = "/";
                __overlay__ {
                        #address-cells = <2>;
                        #size-cells = <1>;

                        gpio_keys {
                                status = "okay";
                                compatible = "gpio-keys";
                                pinctrl-names = "default";
                                pinctrl-0 = <&key_voldown &key_volup>;

                                button@1 {
                                        label = "gpio-keys: KEY_VOLUMEDOWN";
                                        linux,code = <114>;
                                        gpios = <&gpa1 0 0xf>;
                                };
                                button@2 {
                                        label = "gpio-keys: KEY_VOLUMEUP";
                                        linux,code = <115>;
                                        gpios = <&gpa0 7 0xf>;
                                };
                        };

			ifconn {
				status = "okay";
				compatible = "samsung,ifconn";
				ifconn,usbpd = "s2mu106";
				ifconn,muic = "s2mu106-muic";
			};

			dummy_audio_codec: audio-codec-dummy {
				compatible = "snd-soc-dummy";
				#sound-dai-cells = <0>;
			};

			sound {
				compatible = "samsung,exynos-sound";

				samsung,routing = "ABOX SPDY Capture", "VINPUT_FM",
					"BLUETOOTH SPK", "ABOX UAIF2 Playback",
					"ABOX UAIF2 Capture", "BLUETOOTH MIC",
					"ECHO SPK", "ABOX ECHO Playback",
					"ABOX ECHO Capture", "ECHO MIC",
					"FWD SPK", "ABOX FWD Playback",
					"ABOX FWD Capture", "FWD MIC";

				samsung,aux = <&abox_tplg>;

				rdma0 {
					cpu {
						sound-dai = <&abox_rdma_0 0>;
					};
					platform {
						sound-dai = <&abox_rdma_0 0>;
					};
				};
				rdma1 {
					cpu {
						sound-dai = <&abox_rdma_1 0>;
					};
					platform {
						sound-dai = <&abox_rdma_1 0>;
					};
				};
				rdma2 {
					cpu {
						sound-dai = <&abox_rdma_2 0>;
					};
					platform {
						sound-dai = <&abox_rdma_2 0>;
					};
				};
				rdma3 {
					cpu {
						sound-dai = <&abox_rdma_3 0>;
					};
					platform {
						sound-dai = <&abox_rdma_3 0>;
					};
				};
				rdma4 {
					cpu {
						sound-dai = <&abox_rdma_4 0>;
					};
					platform {
						sound-dai = <&abox_rdma_4 0>;
					};
				};
				rdma5 {
					cpu {
						sound-dai = <&abox_rdma_5 0>;
					};
					platform {
						sound-dai = <&abox_rdma_5 0>;
					};
				};
				rdma6 {
					cpu {
						sound-dai = <&abox_rdma_6 0>;
					};
					platform {
						sound-dai = <&abox_rdma_6 0>;
					};
				};
				rdma7 {
					cpu {
						sound-dai = <&abox_rdma_7 0>;
					};
					platform {
						sound-dai = <&abox_rdma_7 0>;
					};
				};
				rdma8 {
					cpu {
						sound-dai = <&abox_rdma_8 0>;
					};
					platform {
						sound-dai = <&abox_rdma_8 0>;
					};
				};
				rdma9 {
					cpu {
						sound-dai = <&abox_rdma_9 0>;
					};
					platform {
						sound-dai = <&abox_rdma_9 0>;
					};
				};
				rdma10 {
					cpu {
						sound-dai = <&abox_rdma_10 0>;
					};
					platform {
						sound-dai = <&abox_rdma_10 0>;
					};
				};
				rdma11 {
					cpu {
						sound-dai = <&abox_rdma_11 0>;
					};
					platform {
						sound-dai = <&abox_rdma_11 0>;
					};
				};
				wdma0 {
					cpu {
						sound-dai = <&abox_wdma_0 0>;
					};
					platform {
						sound-dai = <&abox_wdma_0 0>;
					};
				};
				wdma1 {
					cpu {
						sound-dai = <&abox_wdma_1 0>;
					};
					platform {
						sound-dai = <&abox_wdma_1 0>;
					};
				};
				wdma2 {
					cpu {
						sound-dai = <&abox_wdma_2 0>;
					};
					platform {
						sound-dai = <&abox_wdma_2 0>;
					};
				};
				wdma3 {
					cpu {
						sound-dai = <&abox_wdma_3 0>;
					};
					platform {
						sound-dai = <&abox_wdma_3 0>;
					};
				};
				wdma4 {
					cpu {
						sound-dai = <&abox_wdma_4 0>;
					};
					platform {
						sound-dai = <&abox_wdma_4 0>;
					};
				};
				dual0 {
					cpu {
						sound-dai = <&abox_dual_0>;
					};
					platform {
						sound-dai = <&abox_dual_0>;
					};
				};
				dual1 {
					cpu {
						sound-dai = <&abox_dual_1>;
					};
					platform {
						sound-dai = <&abox_dual_1>;
					};
				};
				dual2 {
					cpu {
						sound-dai = <&abox_dual_2>;
					};
					platform {
						sound-dai = <&abox_dual_2>;
					};
				};
				dual3 {
					cpu {
						sound-dai = <&abox_dual_3>;
					};
					platform {
						sound-dai = <&abox_dual_3>;
					};
				};
				dual4 {
					cpu {
						sound-dai = <&abox_dual_4>;
					};
					platform {
						sound-dai = <&abox_dual_4>;
					};
				};
				ddma0 {
					cpu {
						sound-dai = <&abox_ddma_0>;
					};
					platform {
						sound-dai = <&abox_ddma_0>;
					};
				};
				ddma1 {
					cpu {
						sound-dai = <&abox_ddma_1>;
					};
					platform {
						sound-dai = <&abox_ddma_1>;
					};
				};
				ddma2 {
					cpu {
						sound-dai = <&abox_ddma_2>;
					};
					platform {
						sound-dai = <&abox_ddma_2>;
					};
				};
				ddma3 {
					cpu {
						sound-dai = <&abox_ddma_3>;
					};
					platform {
						sound-dai = <&abox_ddma_3>;
					};
				};
				ddma4 {
					cpu {
						sound-dai = <&abox_ddma_4>;
					};
					platform {
						sound-dai = <&abox_ddma_4>;
					};
				};
				ddma5 {
					cpu {
						sound-dai = <&abox_ddma_5>;
					};
					platform {
						sound-dai = <&abox_ddma_5>;
					};
				};
				uaif0 {
					format = "i2s";
					cpu {
						sound-dai = <&abox_uaif_0>;
					};
					codec {
						sound-dai = <&codec_aud3004x>;
					};
				};
				uaif1 {
					format = "i2s";
					cpu {
						sound-dai = <&abox_uaif_1>;
					};
					/*
					codec {
						sound-dai = <&sma1303_amp>;
					};
					*/
				};
				uaif2 {
					format = "i2s";
					cpu {
						sound-dai = <&abox_uaif_2>;
					};
				};
				spdy {
					cpu {
						sound-dai = <&abox_spdy>;
					};
				};
				sifs0 {
					cpu {
						sound-dai = <&abox 0>;
					};
				};
				sifs1 {
					cpu {
						sound-dai = <&abox 1>;
					};
				};
				sifs2 {
					cpu {
						sound-dai = <&abox 2>;
					};
				};
				sifs3 {
					cpu {
						sound-dai = <&abox 3>;
					};
				};
				sifs4 {
					cpu {
						sound-dai = <&abox 4>;
					};
				};
				sifs5 {
					cpu {
						sound-dai = <&abox 5>;
					};
				};
				nsrc0 {
					cpu {
						sound-dai = <&abox 8>;
					};
				};
				nsrc1 {
					cpu {
						sound-dai = <&abox 9>;
					};
				};
				nsrc2 {
					cpu {
						sound-dai = <&abox 10>;
					};
				};
				nsrc3 {
					cpu {
						sound-dai = <&abox 11>;
					};
				};
				nsrc4 {
					cpu {
						sound-dai = <&abox 12>;
					};
				};
				rdma0_be {
					cpu {
						sound-dai = <&abox_rdma_0 1>;
					};
					platform {
						sound-dai = <&abox_rdma_0 1>;
					};
				};
				rdma1_be {
					cpu {
						sound-dai = <&abox_rdma_1 1>;
					};
					platform {
						sound-dai = <&abox_rdma_1 1>;
					};
				};
				rdma2_be {
					cpu {
						sound-dai = <&abox_rdma_2 1>;
					};
					platform {
						sound-dai = <&abox_rdma_2 1>;
					};
				};
				rdma3_be {
					cpu {
						sound-dai = <&abox_rdma_3 1>;
					};
					platform {
						sound-dai = <&abox_rdma_3 1>;
					};
				};
				rdma4_be {
					cpu {
						sound-dai = <&abox_rdma_4 1>;
					};
					platform {
						sound-dai = <&abox_rdma_4 1>;
					};
				};
				rdma5_be {
					cpu {
						sound-dai = <&abox_rdma_5 1>;
					};
					platform {
						sound-dai = <&abox_rdma_5 1>;
					};
				};
				rdma6_be {
					cpu {
						sound-dai = <&abox_rdma_6 1>;
					};
					platform {
						sound-dai = <&abox_rdma_6 1>;
					};
				};
				rdma7_be {
					cpu {
						sound-dai = <&abox_rdma_7 1>;
					};
					platform {
						sound-dai = <&abox_rdma_7 1>;
					};
				};
				rdma8_be {
					cpu {
						sound-dai = <&abox_rdma_8 1>;
					};
					platform {
						sound-dai = <&abox_rdma_8 1>;
					};
				};
				rdma9_be {
					cpu {
						sound-dai = <&abox_rdma_9 1>;
					};
					platform {
						sound-dai = <&abox_rdma_9 1>;
					};
				};
				rdma10_be {
					cpu {
						sound-dai = <&abox_rdma_10 1>;
					};
					platform {
						sound-dai = <&abox_rdma_10 1>;
					};
				};
				rdma11_be {
					cpu {
						sound-dai = <&abox_rdma_11 1>;
					};
					platform {
						sound-dai = <&abox_rdma_11 1>;
					};
				};
				wdma0_be {
					cpu {
						sound-dai = <&abox_wdma_0 1>;
					};
					platform {
						sound-dai = <&abox_wdma_0 1>;
					};
				};
				wdma1_be {
					cpu {
						sound-dai = <&abox_wdma_1 1>;
					};
					platform {
						sound-dai = <&abox_wdma_1 1>;
					};
				};
				wdma2_be {
					cpu {
						sound-dai = <&abox_wdma_2 1>;
					};
					platform {
						sound-dai = <&abox_wdma_2 1>;
					};
				};
				wdma3_be {
					cpu {
						sound-dai = <&abox_wdma_3 1>;
					};
					platform {
						sound-dai = <&abox_wdma_3 1>;
					};
				};
				wdma4_be {
					cpu {
						sound-dai = <&abox_wdma_4 1>;
					};
					platform {
						sound-dai = <&abox_wdma_4 1>;
					};
				};
				usb {
					cpu {
						sound-dai = <&abox 16>;
					};
				};
				echo {
					cpu {
						sound-dai = <&abox 17>;
					};
				};
				fwd {
					cpu {
						sound-dai = <&abox 18>;
					};
				};
			}; /* end of soundcard */

			usb_hs_tune:hs_tune {
				hs_tune_cnt = <7>;
				/* value = <device host> */
				hs_tune1 {
					tune_name = "tx_pre_emp";
					tune_value = <0x3 0x3>;
				};

				hs_tune2 {
					tune_name = "tx_vref";
					tune_value = <0xd 0xd>;
				};

				hs_tune3 {
					tune_name = "rx_sqrx";
					tune_value = <0x7 0x7>;
				};

				hs_tune4 {
					tune_name = "utmi_clk";
					tune_value = <0x1 0x1>;
				};

				hs_tune5 {
					tune_name = "compdis";
					tune_value = <0x7 0x7>;
				};

				hs_tune6 {
					tune_name = "tx_res";
					tune_value = <0x1 0x1>;
				};

				hs_tune7 {
					tune_name = "tx_rise";
					tune_value = <0x1 0x1>;
				};
			};
			gnss_mailbox: gnss_mailbox {
				status = "okay";
				compatible = "samsung,exynos-gnss-mailbox";

				reg = <0x0 0x11980000 0x180>; /* MAILBOX AP2GNSS */

				interrupt-parent = <&gic>;
				interrupts = <GIC_SPI INTREQ__MAILBOX_GNSS2AP IRQ_TYPE_LEVEL_HIGH>;

				mbox,name = "gnss_mailbox";
				mbox,id = <0>;

				num_shared_reg = <4>;
				shared_reg_offset = <0x80>;
				use_sw_reset_reg = <1>;

			};

			gnssif {
				status = "okay";
				compatible = "samsung,exynos-gnss";

				interrupt-parent = <&gic>;
				interrupts = <GIC_SPI INTREQ__ALIVE_GNSS_ACTIVE IRQ_TYPE_LEVEL_HIGH>,
						<GIC_SPI INTREQ__GNSS_WDOG_RESET IRQ_TYPE_EDGE_RISING>,
						<GIC_SPI INTREQ__GNSS_WAKEUP_INT IRQ_TYPE_LEVEL_HIGH>,
						<GIC_SPI INTREQ__GNSS_SW_INT IRQ_TYPE_EDGE_RISING>;
				interrupt-names = "ACTIVE", "WATCHDOG", "WAKEUP", "SW_INIT";
				shmem,name = "KEPLER";
				device_node_name = "gnss_ipc";

				/* Mailbox */
				mbox_info = <&gnss_mailbox>;

				/* ap2gnss */
				mbx,int_bcmd = <0>;
				mbx,int_req_fault_info = <1>;
				mbx,int_ipc_msg = <2>;
				mbx,int_ack_wake_set = <3>;
				mbx,int_ack_wake_clr = <4>;

				/* gnss2ap */
				mbx,irq_bcmd = <0>;
				mbx,irq_rsp_fault_info = <1>;
				mbx,irq_ipc_msg = <2>;
				mbx,irq_req_wake_clr = <4>;
				mbx,irq_simple_lock = <15>;

				mbx,reg_bcmd_ctrl = <0>, <1>, <2>, <3>;

				/* Memory */
				memory-region = <&gnss_rmem>;

				reg_rx_ipc_msg = <1 5>;
				reg_tx_ipc_msg = <1 4>;
				reg_rx_head = <1 3>;
				reg_rx_tail = <1 2>;
				reg_tx_head = <1 1>;
				reg_tx_tail = <1 0>;
				fault_info = <1 0x200000 0x180000>;

				shmem,code_offset = <0x00000000>;
				shmem,code_allowed_size = <0x00380000>;
				shmem,ipc_offset = <0x00380000>;
				shmem,ipc_size = <0x00080000>;

				shmem,ipc_rx_offset = <0x00000000>;
				shmem,ipc_rx_size = <0x00040000>;
				shmem,ipc_tx_offset = <0x00040000>;
				shmem,ipc_tx_size = <0x0003FF80>;
				shmem,ipc_reg_offset = <0x0007FF80>;
				shmem,ipc_reg_size = <0x00000080>; /* can afford 32 regs */

				shmem,base_addr = <0x60000000>;
				shmem,base_addr_2nd = <0xA0000000>;

                        };
                };


        };

};

&serial_0 {
        status = "okay";
};

&i2c_2 {
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	touchscreen@20 {
		compatible = "synaptics,rmi4";
		reg = <0x20>;
		pinctrl-names = "on_state", "off_state";
		pinctrl-0 = <&attn_irq &vdd_on>;
		pinctrl-1 = <&attn_input &vdd_off>;
		synaptics,irq_gpio = <&gpa0 0 0>;
		synaptics,irq_type = <8200>;
		synaptics,max_coords = <1440 2560>;     /* x y */
		synaptics,num_lines = <29 16>;          /* rx tx */
		synaptics,regulator_avdd = "vdd_ldo27";
	};
};

&pinctrl_0 {
	attn_irq: attn-irq {
		samsung,pins = "gpa0-0";
		samsung,pin-function = <0xf>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	attn_input: attn-input {
		samsung,pins = "gpa0-0";
		samsung,pin-function = <0>;
		samsung,pin-pud = <1>;
	};
	key_voldown: key-voldown {
               samsung,pins = "gpa1-0";
               samsung,pin-function = <0xf>;
               samsung,pin-pud = <0>;
               samsung,pin-drv = <0>;
	};

	dwmmc2_cd_ext_irq: dwmmc2_cd_ext_irq {
		samsung,pins = "gpa0-3";
		samsung,pin-function = <0xf>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <4>;
	};

	key_volup: key-volup {
               samsung,pins = "gpa0-7";
               samsung,pin-function = <0xf>;
               samsung,pin-pud = <0>;
               samsung,pin-drv = <0>;
	};

	if_pmic_irq: if-pmic-irq {
		samsung,pins = "gpa1-1";
		samsung,pin-function = <0>;
		samsung,pin-pud = <0>;
		samsung,pin-drv = <0>;
	};

	usbpd_irq: usbpd-irq {
		samsung,pins = "gpa0-2";
		samsung,pin-function = <0>;
		samsung,pin-pud = <2>;
		samsung,pin-drv = <0>;
	};
};

&pinctrl_5 {
	vdd_on: vdd-on {
		samsung,pins = "gpg2-6";
		samsung,pin-function = <1>;
		samsung,pin-val = <1>;
		samsung,pin-pud = <3>;
		samsung,pin-drv = <3>;
	};

	vdd_off: vdd-off {
		samsung,pins = "gpg2-6";
		samsung,pin-functon = <1>;
		samsung,pin-val = <0>;
		samsung,pin-pud = <1>;
		samsung,pin-drv = <3>;
	};
};

&i2c_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	s2mu106@3D {
		compatible = "samsung,s2mu106mfd";
		reg = <0x3D>;
		pinctrl-names = "default";
		pinctrl-0 = <&if_pmic_irq>;
		s2mu106,irq-gpio = <&gpa1 1 0>;
		s2mu106,wakeup;
	};

	flash_led {
		status = "okay";
		default_current = <50>;
		max_current = <200>;
		default_timer = <0>;

		s2mu106-channel1 {
			id = <0>;
		};

		s2mu106-channel2 {
			id = <1>;
		};

		s2mu106-channel3 {
			id = <2>;
		};

	};

	s2mu106-fuelgauge@3B {
		compatible = "samsung,s2mu106-fuelgauge";
		reg = <0x3B>;
		pinctrl-names = "default";
		fuelgauge,fuel_alert_vol = <3400>;
		fuelgauge,fuel_alert_soc = <1>;
		fuelgauge,type_str = "SDI";
		fuelgauge,model_type = <1>;
	};

	s2mu106-charger {
		 status = "okay";
		 battery,charger_name = "s2mu106-charger";
		 battery,chg_gpio_en = <0>;
		 battery,chg_polarity_en = <0>;
		 battery,chg_gpio_status = <0>;
		 battery,chg_polarity_status = <0>;
		 battery,chg_float_voltage = <4350>;
		 battery,chg_recharge_vcell = <4250>;
		 battery,chg_full_vcell = <4300>;
		 battery,full_check_type = <2>;
		 battery,full_check_type_2nd = <2>;
		 battery,input_current_limit = <
			 500 450 500 1200 500 1200 1200 1000 1000 1000
			 1000 500 500 1200 1000 500 450>;
		 battery,fast_charging_current =	<
			 500 450 500 1200 500 1200 1200 1000 1000 1000
			 1000 500 500 1200 1000 500 450>;
		 battery,full_check_current_1st = <
			 300 0 300 300 300 300 300 300 300 300
			 300 300 300 300 300 300 0>;
		 battery,full_check_current_2nd = <
			 100 0 100 100 100 100 100 100 100 100
			 100 100 100 100 100 100 0>;
	 };

	usbpd-s2mu106@3C {
		compatible = "sec-usbpd,i2c";
		reg = <0x3C>;
		pinctrl-names = "default";
		pinctrl-0 = <&usbpd_irq>;
		usbpd,usbpd_int = <&gpa0 2 0>;

		pdic-manager {
			/* sink */
			pdic,max_power = <5000>;
			pdic_op_power = <2500>;
			pdic_max_voltage = <6000>;
			pdic_max_current = <2000>;
			pdic,min_current = <500>;

			pdic,giveback = <0>;
			pdic,usb_com_capable = <1>;
			pdic,no_usb_suspend = <1>;

			/* source */
			source,max_voltage = <5000>;
			source,min_voltage = <4000>;
			source,max_power = <2500>;

			/* sink cap */
			sink,capable_max_voltage = <5000>;
		};
	};
};

&dwmmc_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	num-slots = <1>;
	broken-cd;
	fixed_voltage;
	supports-highspeed;
	mmc-ddr-1_8v;
	mmc-hs200-1_8v;
	mmc-hs400-1_8v;
	supports-8bit;
	supports-cmd23;
	supports-erase;
	mmc-hs400-enhanced-strobe;
	card-init-hwacg-ctrl;
	qos-dvfs-level = <334000>;
	data-timeout = <200>;
	hto-timeout = <80>;
	enable-ulp-mode;
	support-cmdq;
	mmc-inline-crypt;
	fifo-depth = <0x40>;
	non-removable;
	desc-size = <4>;
	card-detect-delay = <200>;
	samsung,dw-mshc-ciu-div = <3>;
	samsung,dw-mshc-txdt-crc-timer-fastlimit = <0x34>;
	samsung,dw-mshc-txdt-crc-timer-initval = <0x38>;
	samsung,dw-mshc-hs400-tx-delay-line = <0x40>;
	samsung,dw-mshc-hs400-delay-line = <0x60>;
	samsung,dw-mshc-sdr-timing = <3 0 4 0>;
	samsung,dw-mshc-ddr-timing = <3 0 4 2>;
	samsung,dw-mshc-hs200-timing = <3 0 3 0>;
	samsung,dw-mshc-hs400-timing = <1 0 2 0>;
	samsung,dw-mshc-hs400-ulp-timing = <3 0 4 2>;

	num-ref-clks = <12>;
	ciu_clkin = <25 50 50 25 50 100 200 50 50 200 200 200>;

	/* Swapping clock drive strength */
	clk-drive-number = <4>;
	pinctrl-names = "default",
		"fast-slew-rate-1x",
		"fast-slew-rate-2x",
		"fast-slew-rate-3x",
		"fast-slew-rate-4x";
	pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_rdqs &sd0_nreset &sd0_bus1 &sd0_bus4 &sd0_bus8>;
	pinctrl-1 = <&sd0_clk_fast_slew_rate_1x>;
	pinctrl-2 = <&sd0_clk_fast_slew_rate_2x>;
	pinctrl-3 = <&sd0_clk_fast_slew_rate_3x>;
	pinctrl-4 = <&sd0_clk_fast_slew_rate_4x>;

	slot@0 {
		reg = <0>;
		bus-width = <8>;
	};
};

&dwmmc_2 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	num-slots = <1>;
	supports-4bit;
	supports-cmd23;
	supports-erase;
	supports-highspeed;
	sd-uhs-sdr50;
	sd-uhs-sdr104;
	card-detect-gpio;
	bypass-for-allpass;
	use-fine-tuning;
	card-init-hwacg-ctrl;
	skip-init-mmc-scan;
	use-runtime-pm;
	skip-init-no-tray;
	fifo-depth = <0x40>;
	desc-size = <4>;
	ssc-rate-mfr = <12>;
	ssc-rate-mrr = <3>;
	card-detect-delay = <400>;
	samsung,dw-mshc-ciu-div = <3>;
	clock-frequency = <800000000>;
	samsung,dw-mshc-sdr-timing = <3 0 2 0>;
	samsung,dw-mshc-ddr-timing = <3 0 2 1>;
	samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
	samsung,dw-mshc-sdr104-timing = <3 0 3 0>;

	num-ref-clks = <9>;
	ciu_clkin = <25 50 50 25 50 100 200 50 50>;

	/* Swapping clock drive strength */
	clk-drive-number = <6>;
	pinctrl-names = "init",
		"fast-slew-rate-1x",
		"fast-slew-rate-1_5x",
		"fast-slew-rate-2x",
		"fast-slew-rate-2_5x",
		"fast-slew-rate-3x",
		"fast-slew-rate-4x",
		"pins-as-pdn",
		"pins-as-func";
	pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4 &dwmmc2_cd_ext_irq>;
	pinctrl-1 = <&sd2_clk_fast_slew_rate_1x>;
	pinctrl-2 = <&sd2_clk_fast_slew_rate_1_5x>;
	pinctrl-3 = <&sd2_clk_fast_slew_rate_2x>;
	pinctrl-4 = <&sd2_clk_fast_slew_rate_2_5x>;
	pinctrl-5 = <&sd2_clk_fast_slew_rate_3x>;
	pinctrl-6 = <&sd2_clk_fast_slew_rate_4x>;
	pinctrl-7 = <&sd2_pins_as_pdn>;
	pinctrl-8 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4>;

	card-detect = <&gpa0 3 0xf>;
	slot@0 {
		reg = <0>;
		bus-width = <4>;
		disable-wp;
	};

	mmc-pmu-pad {
		offset = <0x1CA0>;
		mask = <0x800>;
		val = <0x800>;
	};
};

&panel_0 {
	/* reset, power(ldo_en) */
	gpios = <&gpg2 5 0x1>, <&gpg1 1 0x1>;
	/* ldo28, buck5 */
	regulator_1p8v = "vdd_ldo28";
};

&udc {
	status = "okay";
	lazy-vbus-up;
	dwc3 {
		dr_mode = "peripheral";
		maximum-speed = "high-speed";
	};
};

&usbdrd_dwc3 {
	status = "okay";
	maximum-speed = "high-speed";
	usb_audio_offloading = <0>;
	xhci_l2_support = <0>;
	xhci_use_uram_for_audio = <0>;
	vdd33_usb-supply = <&l11_reg>;
};

&usbdrd_phy0 {
	status = "okay";
	use_default_tune_val = <0x1>;
	hs_tune_param = <&usb_hs_tune>;
	vdd33_usb-supply = <&l11_reg>;
};

